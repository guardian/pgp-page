AWSTemplateFormatVersion: '2010-09-09'
Description: Run the SecureContact Monitor in AWS

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Security
      Parameters:
      - SSHAccessCidr
      - KeyName
    - Label:
        default: Networking
      Parameters:
      - VpcId
      - PublicVpcSubnets
      - PrivateVpcSubnets
    - Label:
        default: AWS Configuration
      Parameters:
      - AMI
      - App
      - Stack
      - Stage
      - PublicBucket

Parameters:
  KeyName:
    Description: An ssh keypair to put on the instance
    Type: AWS::EC2::KeyPair::KeyName

  SSHAccessCidr:
    Description: A CIDR from which access to the instance is allowed
    AllowedPattern: ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}$
    ConstraintDescription: Parameter should be a CIDR block e.g. "1.2.3.4/32"
    Type: String

  VpcId:
    Description: ID of the VPC onto which to launch the stack
    Type: AWS::EC2::VPC::Id
  PublicVpcSubnets:
    Description: Subnets to use in VPC for public ELB
    Type: List<AWS::EC2::Subnet::Id>
  PrivateVpcSubnets:
    Description: Subnets to use in VPC for instances
    Type: List<AWS::EC2::Subnet::Id>

  AMI:
    Description: Base AMI for SecureContact instances
    Type: AWS::EC2::Image::Id
  App:
    Description: Application name
    Type: String
    Default: secure-contact
  Stack:
    Description: Application stack
    Type: String
    Default: secure-contact
  Stage:
    Description: Application stage
    Type: String
    AllowedValues:
    - PROD
    - CODE
    - DEV
    Default: PROD

  PublicBucket:
    Description: Name of the public S3 bucket that hosts the website
    Type: String

Resources:

# ----------------------- #
#  COMMON PARAMETERS      #
# ----------------------- #

  SecureDropBucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: S3 bucket that holds the site content
      Name: !Sub /${Stack}/${Stage}/securedrop-public-bucket
      Type: String
      Value: !Ref PublicBucket

# ----------------------- #
#  LOADBALANCER           #
# ----------------------- #

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Secure Contact Security Group
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: App
          Value: !Ref App
        - Key: Stack
          Value: !Ref Stack
        - Key: Stage
          Value: !Ref Stage

  LoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      Listeners:
      - LoadBalancerPort: 80
        InstancePort: 80
        Protocol: HTTP
      Subnets:
        Ref: PublicVpcSubnets
      SecurityGroups:
      - Ref: LoadBalancerSecurityGroup

# ----------------------- #
#  APPLICATION SERVER     #
# ----------------------- #

  SecureContactInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - !Ref SecureContactInstanceRole

  SecureContactInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: root-policy
        PolicyDocument:
          Statement:
            # fetch parameters according to stage
            - Effect: Allow
              Action:
                - ssm:GetParameter
                - ssm:GetParameters
                - ssm:GetParametersByPath
              Resource:
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/securedrop-url
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${Stack}/${Stage}/*
            # send email alerts from validated addresses
            - Effect: Allow
              Action:
                - ses:SendEmail
              Resource: "*"
            # allow service to update the website configuration
            - Effect: Allow
              Resource:
                - !Sub arn:aws:s3:::${PublicBucket}
                - !Sub arn:aws:s3:::${PublicBucket}/*
              Action:
                - S3:PutBucketWebsite
                - S3:PutObject

  # Minimal policy to run commands via ssm and use ssm-scala
  SSMRunCommandPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ssm-run-command
      PolicyDocument:
        Statement:
        - Effect: Allow
          Resource: "*"
          Action:
          - ec2messages:AcknowledgeMessage
          - ec2messages:DeleteMessage
          - ec2messages:FailMessage
          - ec2messages:GetEndpoint
          - ec2messages:GetMessages
          - ec2messages:SendReply
          - ssm:UpdateInstanceInformation
          - ssm:ListInstanceAssociations
          - ssm:DescribeInstanceProperties
          - ssm:DescribeDocumentParameters
      Roles:
      - !Ref SecureContactInstanceRole

  # Describe instance tags, to find out its own stack, app, stage
  DescribeTagsPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: describe-tags-policy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Resource: "*"
          Action:
            - autoscaling:DescribeAutoScalingInstances
            - autoscaling:DescribeAutoScalingGroups
            - ec2:DescribeRegions
            - ec2:DescribeTags
      Roles:
      - !Ref SecureContactInstanceRole

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SecureContact EC2 instance
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
      # allow ELB to talk to instance
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId:
          Ref: LoadBalancerSecurityGroup
      # allow SSH access to specified IP range
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref SSHAccessCidr
      SecurityGroupEgress:
      # allow instance to make http requests
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: App
          Value: !Ref App
        - Key: Stack
          Value: !Ref Stack
        - Key: Stage
          Value: !Ref Stage

  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId:
        Ref: AMI
      SecurityGroups:
      - Ref: InstanceSecurityGroup
      InstanceType: t3.micro
      IamInstanceProfile:
        Ref: SecureContactInstanceProfile
      AssociatePublicIpAddress: true
      UserData:
        'Fn::Base64': !Sub |
          #!/bin/bash -ev

          echo ${Stage} > /etc/stage

          adduser --home /secure-contact --disabled-password secure-contact

          git clone https://github.com/guardian/secure-contact /secure-contact
          pip3 install -r /secure-contact/requirements.txt

          touch /secure-contact/cron-lastrun.log
          echo '00 * * * *python3 /secure-contact/monitor.py > /secure-contact/cron-lastrun.log 2>&1' | crontab -u secure-contact -

          chown -R secure-contact /secure-contact

          service tor start


  AutoscalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        Ref: PrivateVpcSubnets
      LaunchConfigurationName:
        Ref: LaunchConfig
      MinSize: 0
      MaxSize: 1
      DesiredCapacity: 1
      LoadBalancerNames:
      - Ref: LoadBalancer
      Tags:
      - Key: Stage
        Value:
          Ref: Stage
        PropagateAtLaunch: true
      - Key: Stack
        Value:
          Ref: Stack
        PropagateAtLaunch: true
      - Key: App
        Value:
          Ref: App
        PropagateAtLaunch: true
      - Key: Name
        Value:
          Ref: App
        PropagateAtLaunch: true

Outputs:
  LoadBalancerUrl:
    Value: !GetAtt LoadBalancer.DNSName