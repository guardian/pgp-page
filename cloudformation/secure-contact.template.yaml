AWSTemplateFormatVersion: '2010-09-09'
Description: Run the SecureContact service in AWS

Parameters:
  VpcId:
    Description: The VPC in which SecureContact will run
    Type: AWS::EC2::VPC::Id

  AMI:
    Description: Base AMI for SecureContact instances
    Type: AWS::EC2::Image::Id

  AccessRestrictionCidr:
    Description: A CIDR from which access to the instance is allowed
    AllowedPattern: ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}$
    ConstraintDescription: Parameter should be a CIDR block e.g. "1.2.3.4/32"
    Type: String

  KeyName:
    Description: An ssh keypair to put on the instance
    Type: AWS::EC2::KeyPair::KeyName

  ArtifactBucket:
    Description: Name of the S3 bucket where the artifact is located
    Type: String

  DataBucketName:
    Description: Name to use for the S3 bucket that data is uploaded to
    Type: String

  Stage:
    Description: Application stage
    Type: String
    AllowedValues:
    - PROD
    - CODE
    - DEV

Mappings:
  Constants:
    App:
      Value: secure-contact
    Stack:
      Value: infosec

Resources:
  DataBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName:
        Ref: DataBucketName
      Tags:
      - Key: App
        Value:
          Fn::FindInMap: [ Constants, App, Value ]
      - Key: Stack
        Value:
          Fn::FindInMap: [ Constants, Stack, Value ]
      - Key: Stage
        Value: !Ref Stage
    DeletionPolicy: Retain

  DataBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: DataBucket
      PolicyDocument: 
        Statement: 
        - Action:
          - s3:ListBucket
          - s3:GetObject
          Effect: Allow
          Resource:
            - !Sub arn:aws:s3:::${DataBucket}
            - !Sub arn:aws:s3:::${DataBucket}/*
          Principal:
            AWS: 
            - !Ref AWS::AccountId

  SecureContactInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - !Ref SecureContactInstanceRole

  SecureContactInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /

  SecureContactBucketPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: secure-contact-bucket-policy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Resource:
          - !Sub arn:aws:s3:::${DataBucket}
          - !Sub arn:aws:s3:::${DataBucket}/*
          Action:
          - s3:ListBucket
          - s3:GetObject
      Roles:
      - !Ref SecureContactInstanceRole

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SecureContact EC2 instance
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp:
          Ref: AccessRestrictionCidr
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 433
        ToPort: 433
        CidrIp:
          Ref: AccessRestrictionCidr
      Tags:
      - Key: App
        Value:
          Fn::FindInMap: [ Constants, App, Value ]
      - Key: Stack
        Value:
          Fn::FindInMap: [ Constants, Stack, Value ]
      - Key: Stage
        Value: !Ref Stage

  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      KeyName:
        Ref: KeyName
      ImageId:
        Ref: AMI
      SecurityGroups:
      - Ref: InstanceSecurityGroup
      InstanceType: t3.micro
      IamInstanceProfile:
        Ref: SecureContactInstanceProfile
      AssociatePublicIpAddress: true
      UserData:
        'Fn::Base64': !Sub |
          #!/bin/bash -ev
          echo ${Stage} > /etc/stage

          # setup secure-contact
          adduser --system --home /secure-contact --disabled-password secure-contact

          aws --region eu-west-1 s3 cp s3://${ArtifactBucket}/secure-contact/${Stage}/secure-contact.json /secure-contact
          aws --region eu-west-1 s3 cp s3://${ArtifactBucket}/secure-contact/${Stage}/secure-contact.tgz /secure-contact

          # Expand zipped tar file; remove base directory
          tar -xzf /secure-contact/secure-contact.tgz --strip 1 --directory /secure-contact/

          # TODO: this should be done as part of the build and bundle
          # pip3 install -r requirements.txt

          # Give ownership of all the application files to the application user
          chown -R secure-contact /secure-contact

          # Start application
