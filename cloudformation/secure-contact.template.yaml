AWSTemplateFormatVersion: '2010-09-09'
Description: Run the SecureContact service in AWS

Parameters:
  VpcId:
    Description: The VPC in which SecureContact will run
    Type: AWS::EC2::VPC::Id

  Subnets:
    Description: Choose which subnets this ECS cluster should be deployed to
    Type: List<AWS::EC2::Subnet::Id>

  AMI:
    Description: Base AMI for SecureContact instances
    Type: AWS::EC2::Image::Id

  AccessRestrictionCidr:
    Description: A CIDR from which access to the instance is allowed
    AllowedPattern: ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}$
    ConstraintDescription: Parameter should be a CIDR block e.g. "1.2.3.4/32"
    Type: String

  KeyName:
    Description: An ssh keypair to put on the instance
    Type: AWS::EC2::KeyPair::KeyName

  ArtifactBucket:
    Description: Name of the S3 bucket where the artifact is located
    Type: String

  DataBucketName:
    Description: Name to use for the private S3 bucket where we upload data
    Type: String

  PublicBucketName:
    Description: Name to use for the public S3 bucket that will serve content
    Type: String

  Stage:
    Description: Application stage
    Type: String
    AllowedValues:
    - PROD
    - CODE
    - DEV

Mappings:
  Constants:
    App:
      Value: secure-contact
    Stack:
      Value: secure-contact

Resources:
  DataBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      AccessControl: Private
      BucketName: !Ref DataBucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
      - Key: App
        Value:
          Fn::FindInMap: [ Constants, App, Value ]
      - Key: Stack
        Value:
          Fn::FindInMap: [ Constants, Stack, Value ]
      - Key: Stage
        Value: !Ref Stage

  DataBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: DataBucket
      PolicyDocument: 
        Statement: 
        - Action:
          - s3:ListBucket
          - s3:GetObject
          Effect: Allow
          Resource:
            - !Sub arn:aws:s3:::${DataBucket}
            - !Sub arn:aws:s3:::${DataBucket}/*
          Principal:
            AWS: 
            - !Ref AWS::AccountId

  PublicBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccessControl: PublicRead
      BucketName: !Ref PublicBucketName
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 28
            Status: Enabled
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
      Tags:
        - Key: App
          Value:
            Fn::FindInMap: [ Constants, App, Value ]
        - Key: Stack
          Value:
            Fn::FindInMap: [ Constants, Stack, Value ]
        - Key: Stage
          Value: !Ref Stage

  PublicBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: PublicBucket
      PolicyDocument:
        Statement:
        - Action:
          - s3:GetObject
          Effect: Allow
          Resource:
            - !Sub arn:aws:s3:::${PublicBucket}/*
          Principal: "*"
          Condition:
            IpAddress:
              aws:SourceIp: !Ref AccessRestrictionCidr

  SecureContactInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - !Ref SecureContactInstanceRole

  SecureContactInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: secure-contact-instance-policy
          PolicyDocument:
            Statement:
              # grant access to the S3 bucket that will hold the website contents
              - Effect: Allow
                Resource: !Sub arn:aws:s3:::${PublicBucketName}
                Action:
                  - s3:ListBucket
              - Effect: Allow
                Resource: !Sub arn:aws:s3:::${PublicBucketName}/*
                Action:
                  - s3:PutObject
                  - s3:DeleteObject

  SecureContactBucketPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: secure-contact-bucket-policy
      PolicyDocument:
        Statement:
        - Effect: Allow
          Resource:
          - !Sub arn:aws:s3:::${DataBucket}
          - !Sub arn:aws:s3:::${DataBucket}/*
          Action:
          - s3:ListBucket
          - s3:GetObject
      Roles:
      - !Ref SecureContactInstanceRole

  SecureContactRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: secure-contact
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
              - !Ref AWS::AccountId
            Action:
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecr:BatchCheckLayerAvailability
              - ecr:PutImage
              - ecr:InitiateLayerUpload
              - ecr:UploadLayerPart
              - ecr:CompleteLayerUpload

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref secure-contact

  ECSAutoScalingGroup:
    DependsOn: ECSCluster
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Ref Subnets
      LaunchConfigurationName: !Ref LaunchConfig
      MinSize: 0
      MaxSize: 1
      DesiredCapacity: 1
      Tags:
        - Key: App
          Value:
            Fn::FindInMap: [ Constants, App, Value ]
          PropagateAtLaunch: true
        - Key: Stack
          Value:
            Fn::FindInMap: [ Constants, Stack, Value ]
          PropagateAtLaunch: true
        - Key: Stage
          Value: !Ref Stage
          PropagateAtLaunch: true
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
        PauseTime: PT15M
        SuspendProcesses:
          - HealthCheck
          - ReplaceUnhealthy
          - AZRebalance
          - AlarmNotification
          - ScheduledActions
        WaitOnResourceSignals: true

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SecureContact EC2 instance
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp:
          Ref: AccessRestrictionCidr
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 433
        ToPort: 433
        CidrIp:
          Ref: AccessRestrictionCidr
      Tags:
      - Key: App
        Value:
          Fn::FindInMap: [ Constants, App, Value ]
      - Key: Stack
        Value:
          Fn::FindInMap: [ Constants, Stack, Value ]
      - Key: Stage
        Value: !Ref Stage

  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      KeyName:
        Ref: KeyName
      ImageId:
        Ref: AMI
      SecurityGroups:
      - Ref: InstanceSecurityGroup
      InstanceType: t3.micro
      IamInstanceProfile:
        Ref: SecureContactInstanceProfile
      AssociatePublicIpAddress: true
      UserData:
        'Fn::Base64': !Sub |
          #!/bin/bash -ev
          echo ${Stage} > /etc/stage

          # setup secure-contact
          adduser --system --home /secure-contact --disabled-password secure-contact
